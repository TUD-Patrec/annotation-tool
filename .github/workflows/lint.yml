name: Lint
on:
  pull_request_target:
    types: [opened, reopened, edited]

  workflow_call:
    inputs:
      ref:
        required: true
        type: string

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v3

      - name: Check out repository
        if: github.event_name == 'workflow_call'
        uses: actions/checkout@v3
        with:
          ref: "${{ inputs.ref }}"

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Update pip
        run: python3 -m pip install --upgrade pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ steps.setup-python.outputs.python-version }}-linting

      - name: Install flake8, black and isort
        run: python3 -m pip install flake8 black isort

      - name: Lint with flake8
        run: |
          # stop the action if there are syntax errors or undefined variables
          python3 -m flake8 annotation_tool main.py --select=E9,F63,F7,F82
          # treat all errors as warnings
          python3 -m flake8 annotation_tool main.py --count --statistics

      - name: Check format with black
        run: python3 -m black --check annotation_tool main.py

      - name: Check format with isort
        run: python3 -m isort --check --settings-path pyproject.toml annotation_tool main.py