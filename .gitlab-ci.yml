# This was in part taken from: https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

image: python:3.9

before_script:
  - python --version  # For debugging

stages:
  - "Build and test"

build linux executable:
  stage: "Build and test"
  variables:
    SRCDIR: "$CI_PROJECT_DIR"
    PLATFORMS: "linux"
  image:
    name: fydeinc/pyinstaller
    entrypoint: ["/bin/sh", "-l", "-c"]
  script:
    - pwd
    - pip install --upgrade pip
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
    - /entrypoint.sh --onefile --noconsole --name annotation-tool main.py
    - mv "dist/linux/annotation-tool" "${CI_PROJECT_DIR}/annotation-tool-linux"
    - 'if [[ ! -z "${OWNCLOUD_KEY}" ]]; then curl -k -T annotation-tool-linux -u "${OWNCLOUD_KEY}:${OWNCLOUD_PASSWORD}" -H "X-Requested-With: XMLHttpRequest" https://owncloud.cs.tu-dortmund.de/public.php/webdav/annotation-tool-linux; fi'
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/

build windows executable:
  stage: "Build and test"
  variables:
    SRCDIR: "$CI_PROJECT_DIR"
    PLATFORMS: "windows"
  image:
    name: fydeinc/pyinstaller
    entrypoint: ["/bin/sh", "-l", "-c"]
  script:
    - pwd
    - /usr/win64/bin/python -m pip install --upgrade pip
    - /usr/win64/bin/python -m pip install poetry
    - /usr/win64/bin/python -m poetry config virtualenvs.create false
    - /usr/win64/bin/python -m poetry install
    - /entrypoint.sh --onefile --noconsole --name annotation-tool main.py
    - mv "dist/windows/annotation-tool.exe" "${CI_PROJECT_DIR}/annotation-tool-windows.exe"
    - 'if [[ ! -z "${OWNCLOUD_KEY}" ]]; then curl -k -T annotation-tool-windows.exe -u "${OWNCLOUD_KEY}:${OWNCLOUD_PASSWORD}" -H "X-Requested-With: XMLHttpRequest" https://owncloud.cs.tu-dortmund.de/public.php/webdav/annotation-tool-windows.exe; fi'
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/

# flake8 linting:
#   stage: "Build and test"
#   script:
#     - pip install --upgrade pip
#     - pip install poetry
#     - poetry install
#     - poetry run flake8 "${CI_PROJECT_DIR}"

# black format check:
#   stage: "Build and test"
#   script:
#     - pip install --upgrade pip
#     - pip install poetry
#     - poetry install
#     - poetry run black --check "${CI_PROJECT_DIR}"

# isort format check:
#   stage: "Build and test"
#   script:
#     - pip install --upgrade pip
#     - pip install poetry
#     - poetry install
#     - poetry run isort --check --settings-path pyproject.toml --recursive "${CI_PROJECT_DIR}"
